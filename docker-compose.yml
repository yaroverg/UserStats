version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    healthcheck:
        test: "nc -z localhost 2181"
        interval: 30s
        timeout: 5s
        retries: 5
        start_period: 10s
  
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - 9092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server kafka:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  store:
    build: ./store
    ports:
      - "5000:5000"
    volumes:
      - ./store:/store
    environment:
      KAFKA_SERVER: ${KAFKA_SERVER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
    stop_signal: SIGINT
    depends_on: 
      kafka:
        condition: service_healthy

  analyzer:
    build: ./analyzer
    ports:
      - "5001:5000"
    volumes:
      - ./analyzer:/analyzer
    environment:
      KAFKA_SERVER: ${KAFKA_SERVER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      REDIS_HOST: ${REDIS_HOST}
    stop_signal: SIGINT
    depends_on: 
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
